name: backend-services
services:
  postgres:
    container_name: prod-backend-postgres
    image: postgres:10.23-alpine
    networks:
      backend-network:
    command: [ "postgres", "-c", "port=${POSTGRES_PORT}" ]
    volumes: [ postgres-data:/var/lib/postgresql/data ]
    env_file: [ .env ]
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} -p ${POSTGRES_PORT}'" ]
      interval: 3s
      timeout: 3s
      retries: 3
  application:
    container_name: prod-backend-app
    ports: [ "8080:8080" ]
    environment:
      DATABASE_URL: jdbc:postgresql://postgres:${POSTGRES_PORT}/${POSTGRES_DB}
    env_file: [ .env ]
    networks:
      backend-network:
    build:
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
volumes:
  postgres-data:
networks:
  backend-network:
